image: ruby:2.3

before_script:
  - apt-get -y install rsync
  - bundle install

  # install ssh-agent
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'

  # run ssh-agent
  - eval $(ssh-agent -s)

  # add ssh key stored in SSH_PRIVATE_KEY variable to the agent store
  - ssh-add <(echo "$SSH_DEPLOY_PRIVATE_KEY")

  # disable host key checking (NOTE: makes you susceptible to man-in-the-middle attacks)
  # WARNING: use only in docker container, if you use it with shell you will overwrite your user's ssh config
  - mkdir -p ~/.ssh
  - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

stages:
  - build
  - staging
  - deploy

build:
  stage: build
  script:
  - echo $(whoami)
  - bundle exec jekyll build

  except:
  - master

staging:
  stage: staging
  script:
  - echo $(whoami)
  - JEKYLL_ENV=stage bundle exec jekyll build --config=_config.yml,_config-stage.yml --drafts --future
  - ssh -p 49999 maeick@linode.missionfocus.com 'mkdir -p /opt/caddy/eick-staging'
  - rsyc -arv --delete -e 'ssh - p 49999' _site/* maeick@linode.missionfocus.com:/opt/caddy/eick-staging
  - scp -r -p -P 49999 _site/* maeick@linode.missionfocus.com:/opt/caddy/eick-staging

  artifacts:
    expire_in: 2 weeks
    paths:
      - _staging
  only:
  - master

deploy:
  stage: deploy
  script:
  - echo $(whoami)
  - JEKYLL_ENV=production bundle exec jekyll build --config=_config.yml

  - ssh -p 49999 maeick@linode.missionfocus.com 'mkdir -p /opt/caddy/eick'
  - rsyc -arv --delete -e 'ssh - p 49999' _site/* maeick@linode.missionfocus.com:/opt/caddy/eick

  artifacts:
    expire_in: 2 weeks
    paths:
    - _site
  only:
  - master
